//4. POST a new joke
// http://localhost:3000/jokes enter this URL in postman.
app.post("/jokes", (req,res) => {
  const newJoke = {
    id: jokes.length + 1,
    jokeText: req.body.text,    // bodyParser is included to get values passed in. In postman select Post and click on body, then click on x-www-form-urlencoded. Include key as text and type. Enter values for those keys and click send.
    jokeType: req.body.type,
  };
  jokes.push(newJoke);
  console.log(jokes.slice(-1)); // slice(-1) will display last object of array in console(Hyper).
  res.json(newJoke);
});

//5. PUT a joke
// http://localhost:3000/jokes/id enter this URL in Postman. Click on body, then click on x-www-form-urlencoded and Enter key as text and type, then type its value and click on send.
app.put("/jokes/:id", (req,res) => {   // PUT will replace entire data of an object with new data.
  const id = parseInt(req.params.id);
  const replacementJoke = {
    id: id,
    jokeText: req.body.text,  // This we will get through body of postman request.
    jokeType: req.body.type,
  };
  const searchIndex = jokes.findIndex((joke) => joke.id === id);
  jokes[searchIndex] = replacementJoke;
  res.json(replacementJoke);  // To display updated joke to user

// Another method of doing
/*
  const id = parseInt(req.params.id);
  const foundJoke = jokes.find((joke) => joke.id === id);
  foundJoke.id = id;
  foundJoke.jokeText = req.body.text;
  foundJoke.jokeType = req.body.type;
  res.json(foundJoke);
  */
});

//6. PATCH a joke
// We do PATCH request to partially update data of object. It will not replace entire data of an object.
//By using this we can either update joke text or type
app.patch("/jokes/:id", (req,res) => {
const id = parseInt(req.params.id);
const existingJoke = jokes.find((joke) => joke.id === id);
const replacementJoke = {
  id: id,
  jokeText: req.body.text || existingJoke.jokeText, // First it will check any value is present in req.body.text. If it is nill then we will take value from existingJoke.jokeText
  jokeType: req.body.type || existingJoke.jokeType,
};
const searchIndex = jokes.findIndex((joke) => joke.id === id);
jokes[searchIndex] = replacementJoke;
console.log(jokes[searchIndex]);
res.json(replacementJoke);

// Another method of doing
/*
  const id = parseInt(req.params.id);
  const searchIndex = jokes.findIndex((joke) => joke.id === id);
  if(req.body.text){
    jokes[searchIndex].jokeText = req.body.text;
  }
  if(req.body.type){
    jokes[searchIndex].jokeType = req.body.type;
  }
  res.json(jokes[searchIndex]);
*/
});
