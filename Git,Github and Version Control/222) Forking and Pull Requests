// Previously we saw Working directory, Staging Area, Local Repository and Remote Repository.
// "git add" to move from Working directory to Staging Area. "git commit" to move from Staging Area to Local Repository. "git push" to add our local repository to Remote Repository.
// In this lesson we will learn more about Local and Remote Repository.

// If we want to copy someone else Remote repository to Our Remote repository then use Fork request.
// Owner of local repository might not given write access to everyone. For trusted group of people only may be given. 
// Because, if they give write accss to everyone then anyone on internet can modify there code and it may alter there feature.
// Then make changes to copied code in our Remote repository. If all added features works fine then raise PULL request to owner of Original repository.
// Then Owner of original repository reviews our changes and if everthying is ok then they will pull our code to their Original repository.

// To Copy my remote repository Story into another account of my github repository.
// Signout from current gitgub account.
// Login with another github account (i.e, prasadms900)
// Search "prasadms429/Story" inside search box there.
// Click on Fork tab.
// Create Fork request.
// Then original repository is copied to our another account.
// Here in copied repository I made changes in Chapter 4.txt, Committed changes with some description about that changes.

// Inside orginal repository, if we click on Insights -> Network -> Then we can see who all are forked our repository and We can one side brach for Forked one.

// Inside copied repository, after making changes click on Pull requests tab -> New pull request -> then we can see what changes we made to previous one ->
// Create pull request -> Add some more description about our changes and how it is useful to your project. Then submit pull request.
// After that request will go owner of Original repository.
// After doing pull request, still our changes is not reflecting in original repository. Because, we have only read acces, not write access.
// For that Owner of original reposiotory need to review and approve our pull reqest.

// To Review and apporve Pull request
// Click on Pull requests tab -> Click on Description of Pull request -> click on Commits tab -> click on Description of Pull request -> Then we review the changes made ->
// If Everthying is ok, then click on Review changes tab -> Then add Review summary and Click on Approve radio button -> Submit review
// Now once changes are approved we can able to merge with our Original repository. For that we can add some comments and click on Confirm merge tab.
// Click on Insights -> Network to see merged graph with pull request changes.

